plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.github.node-gradle.node' version '7.0.1'
//	id "com.moowork.node" version "1.3.1"
}

group = 'com.idfc.bootcamp'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.2'
}

tasks.named('test') {
	useJUnitPlatform()
}


node {
	download = true
	version="18.12.1"
	npmVersion="9.2.0"
	// identify working directory in project
	workDir = file("${project.projectDir}/src/main/frontend-ui/bookstoreapp/nodejs")
	// NPM work directory
	npmWorkDir = file("${project.projectDir}/src/main/frontend-ui/bookstoreapp/npm")
	// node modules directory
	//nodeModulesDir = file("${project.projectDir}/src/main/frontend-ui/bookstoreapp/node_modules")
}

task appNpmInstall(type: NpmTask){
	description = " read packge.json and install all jars"
	workingDir = file("${project.projectDir}/src/main/frontend-ui/bookstoreapp")
	args =["install"]
}

task appNpmBuild(type: NpmTask){
	description = "Builds applciation for your frontend "
	workingDir = file("${project.projectDir}/src/main/frontend-ui/bookstoreapp")
	args =["run", "build"]
}

/*task appNpmInstall(type: NpmTask){
	description = "Installs the NPM dependencies"
	workingDir = file("${project.projectDir}/src/main/frontend-ui/bookstoreapp")
	args =["install"]
}*/

task copyToFrontend(type: Copy){
	from "${project.projectDir}/src/main/frontend-ui/bookstoreapp/build/"
	into "${project.projectDir}/build/resources/main/static"
}

appNpmBuild.dependsOn appNpmInstall
copyToFrontend.dependsOn appNpmBuild
compileJava.dependsOn copyToFrontend